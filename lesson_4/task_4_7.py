'''
Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
При вызове функции должен создаваться объект-генератор.
Функция вызывается следующим образом: for el in fact(n).
Она отвечает за получение факториала числа.

В цикле нужно выводить только первые n чисел, начиная с 1! и до n!.
Подсказка: факториал числа n — произведение чисел от 1 до n.
Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
'''

# ====== решение задания 4.7 (первый вариант через встроенные функции) ============

# подключаем модули счета и расчета факториала
from itertools import count
from math import factorial

# просим ввести максимальное n`ое целое число
num = int(input("Введите 'n' чисел для расчета факториала: "))

# создаем функцию расчета факториала
def fact_gener():
    for i in count(1):
        yield factorial(i)

# создаем цикл перехода на следующее значение пока не рассчитаем все числа
x = 0
for el in fact_gener():
    if x == num:
        break
    else:
        x += 1
        print(f"Factorial {x} is {el}")


# ====== решение задания 4.7 (без встроенные функции) ============

def fact_gen(number):
    f_num = 1
    for b in range(number + 1):
        yield f'Factorial {b} is {f_num}'
        f_num *= b + 1

for i in fact_gen(int(input("Введите n`ое число для расчета факториалов: "))):
    print(i)

