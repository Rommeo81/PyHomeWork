"""
Создать вручную и заполнить несколькими строками текстовый файл, в котором каждая строка будет содержать
данные о фирме: название, форма собственности, выручка, издержки.
Пример строки файла: firm_1 ООО 10000 5000.

Необходимо построчно прочитать файл, вычислить прибыль каждой компании, а также среднюю прибыль.
Если фирма получила убытки, в расчёт средней прибыли её не включать.
Далее реализовать список. Он должен содержать словарь с фирмами и их прибылями, а также словарь со средней прибылью.
Если фирма получила убытки, также добавить её в словарь (со значением убытков).
Пример списка: [{“firm_1”: 5000, “firm_2”: 3000, “firm_3”: 1000}, {“average_profit”: 2000}].

Итоговый список сохранить в виде json-объекта в соответствующий файл.
Пример json-объекта:
[{"firm_1": 5000, "firm_2": 3000, "firm_3": 1000}, {"average_profit": 2000}]
Подсказка: использовать менеджер контекста.
"""


# =========== решение задания 5.7 ==============

# импортируем модуль json
import json

# создаем стартовые словари
profit = {}
pr = {}
prof = 0
prof_aver = 0
i = 0
# открываем файл с данными в режиме чтения, называем его переменной file
with open('test_7.txt', 'r') as file:
    for line in file:
        # в каждой строке отдельным значениям задаем переменные и разделяем по строкам
        name, firm, revenue, costs = line.split()
        # наполняем словарь из имени фирмы и расчета прибыли в каждой строке
        profit[name] = int(revenue) - int(costs)
        # если прибыль фирмы больше 0, прибавляем в переменную prof для расчета средней прибыли
        if profit.setdefault(name) >= 0:
            prof = prof + profit.setdefault(name)
            i += 1
    # если количество фирм с прибылью не равно 0, то производим расчет средней прибыли
    if i != 0:
        prof_aver = prof / i
    # если количество фирм с прибылью не "не равно 0", выводим сообщение с, что средней прибыли нету.
    else:
        print(f'there is no average profit.')
    # записываем в словарь pr среднюю прибыль с округлением
    pr = {'average_profit': round(prof_aver, 2)}
    # обновляем словарь с фирмами словарем со средней прибылью
    profit.update(pr)

    print(f'Firms: {profit}')
    print(f'Average profit: {prof_aver:.2f}')

# создаем фаил и сохраняем в него полученный словарь
with open('test_7.json', 'w') as write_js:
    json.dump(profit, write_js)
    # выводим содержимое фала на экран
    js_str = json.dumps(profit)
    print(f'Created a json-file with content: \n'
          f'{js_str}')
