# Задание 1 ----------------------------
# Поработайте с переменными, создайте несколько, выведите на экран.
# Запросите у пользователя некоторые числа и строки и сохраните в переменные, затем выведите на экран.

# Запрос ввоода имени и целочисленного значения возрастаю. Вывод на экран полноценного предложения с 2мя переменными.
print("----- lesson 1, task 1a -----")
name = input("Здравствуйте, как ваше имя? ")
age = int(input("Каков ваш возраст? "))
print(name, "вам сейчас ", age, " лет.")

# Сложение двух переменных х и y
print("----- lesson 1, task 1b -----")
print("Addition of two numbers")
x = float(input("Enter first number: "))
y = float(input("Enter second number: "))
print("Result is: ", x + y)
print("=====================================")


# Задание 2 ----------------------------
# Пользователь вводит время в секундах.
# Переведите время в часы, минуты, секунды и выведите в формате чч:мм:сс.
# Используйте форматирование строк.

print("----- lesson 1, task 2 -----")
timeseconds = int(input("Enter time in seconds: "))
days = timeseconds // 86400
hours = timeseconds // 3600 - days * 24
minutes = timeseconds // 60 - days * 24 - hours * 60
seconds = timeseconds % 60
print(f"{timeseconds} seconds = {days:02} days, {hours:02} hours, {minutes:02} minutes, {seconds:02} seconds")
print("=====================================")

# Задание 3 ----------------------------
# Узнайте у пользователя число n.
# Найдите сумму чисел n + nn + nnn.
# Например, пользователь ввёл число 3. Считаем 3 + 33 + 333 = 369.
print("----- lesson 1, task 3 -----")
n = input("Enter integer number 'n': ")
while n < '0':
    n = input("Enter integer number 'n', more than 0: ")
print("Result 'n + nn + nnn' is", int(n) + int(n + n) + int(n + n + n))
print("=====================================")


# Задание 4 ----------------------------
# Пользователь вводит целое положительное число.
# Найдите самую большую цифру в числе.
# Для решения используйте цикл while и арифметические операции.
print("----- lesson 1, task 4 -----")

# Запрашиваем число  положительное целое число у пользователя.
m = int(input("Enter positive integer number: "))
# Задаем переменную для хранения текущего максимума
biggest_digit = 0
# Задаем переменную для хранения оставшейся части числа, после отсечения последней цифры в цикле ниже
num = m

while num > 0:          # Цикл по перебору введенного числа с отделением последней цифры и перебор каждой отдельной.
    digit = num % 10    # Отделяем последнюю цифру, пока не закончатся значения и присваиваем значению digit
    if digit > biggest_digit:   # Сравниваем значение последней цифры с текущим максимумом
        biggest_digit = digit   # Записываем в переменную biggest_digit значение из digit если оно условие правильное
        if biggest_digit == 9:  # Если значение достигло 9, то останавливаем цикл
            break
    num = num // 10     # После прохода цикла, отсекаем последнюю цифру

print(f"The biggest digit number {m} is {biggest_digit}")
print("=====================================")


# Задание 5 и 6 ----------------------------
# 5. Запросите у пользователя значения выручки и издержек фирмы.
# Определите, с каким финансовым результатом работает фирма.
# Например, прибыль — выручка больше издержек, или убыток — издержки больше выручки.
# Выведите соответствующее сообщение.
# 6. Если фирма отработала с прибылью, вычислите рентабельность выручки. Это отношение прибыли к выручке.
# Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчёте на одного сотрудника.

print("----- lesson 1, task 5 and 6  -----")
revenue = float(input("Enter the revenue in USD: "))
costs = float(input("Enter the costs in USD: "))
profit = revenue - costs    # Задаем значение переменной прибыли, как разницу между выручкой и затратами.

# Описываем действия, если фирма сработала с прибылью
if profit > 0:
    print(f"Good job! You have a profit {profit:.2f} USD.")
    print(f"Your profitability is {profit / revenue * 100:.2f}%")
    personal_number = int(input("Now we will calculate profit per employee. Enter number employee in your firm: "))
    print(f"Profit {profit / personal_number:.2f} per employee in USD.")

# Описываем действия, если фирма сработала в убыток
elif profit < 0:
    print(f"Sorry, you have losses {profit} USD.")

# Описываем действия, если фирма  сработала с прибылью равной нулю
else:
    print(f"You have {profit} USD profit. Try in hext period work better!")

print("=====================================")


# Задание 7 ----------------------------
# Спортсмен занимается ежедневными пробежками.
# В первый день его результат составил "a" километров.
# Каждый день спортсмен увеличивал результат на 10% относительно предыдущего.
# Требуется определить номер дня, на который результат спортсмена составит не менее "b" километров.
# Программа должна принимать значения параметров a и b и выводить одно натуральное число — номер дня.
# Например: a = 2, b = 3.
# Результат:
# 1-й день: 2
# 2-й день: 2,2
# 3-й день: 2,42
# 4-й день: 2,66
# 5-й день: 2,93
# 6-й день: 3,22
# Ответ: на шестой день спортсмен достиг результата — не менее 3 км.

while True:
    day = 1
    start_result = float(input("Сколько спортсмен пробежал за 1й день тренировки: "))
    percentage = int(input("На сколько % в день спортсмен увеличивает свой результат: "))
    final_result = float(input("Сколько спортсмен должен пробегать километров: "))
    if start_result <= 0 or final_result < 0 or percentage < 0:  # Если ввели значение меньше 0, то сообщение
        print("Результаты введенных данных должны быть больше нуля! Введите еще раз")
    else:
        while final_result > start_result:      # Увеличиваем количество дней, пока он не пробежит нужный километраж.
            start_result = start_result + (start_result * percentage / 100)
            day = day + 1                       # Увеличиваем переменную дней на 1 пока не будет условие в цикле

        print(f"Спортсмен научиться пробегать {final_result} километров через {day} дней")
        break
print("=====================================")