'''
Реализовать проект расчета суммарного расхода ткани на производство одежды.
Основная сущность (класс) этого проекта — одежда, которая может иметь определенное название.
К типам одежды в этом проекте относятся пальто и костюм.
У этих типов одежды существуют параметры: размер (для пальто) и рост (для костюма).
Это могут быть обычные числа: V и H, соответственно.

Для определения расхода ткани по каждому типу одежды использовать формулы:
для пальто (V/6.5 + 0.5),
для костюма (2*H + 0.3).

Проверить работу этих методов на реальных данных.
Реализовать общий подсчет расхода ткани. Проверить на практике полученные на этом уроке знания:
реализовать абстрактные классы для основных классов проекта, проверить на практике работу декоратора @property.
'''


from abc import ABC, abstractmethod

# создаем основной класс Clothes одежда
class Clothes(ABC):
    result = 0  # в эту переменную будем собирать общий подсчет расхода ткани

    def __init__(self, param):
        self.param = param

    # декоратор @property позволяет работать с методом класса как с атрибутом.
    # декоратор @abstractmethod, позволяет указать, что метод, перед которым расположен декоратор, является абстрактным.
    @property
    @abstractmethod
    def consumption(self):
        pass

    # Реализуем метод перегрузки сложение (__add__()) для суммирования
    def __add__(self, other):
        Clothes.result += self.consumption + other.consumption
        return Suit(0)

    # выводим сумму метража ткани строкой
    def __str__(self):
        res = Clothes.result
        Clothes.result = 0
        return f'Общий расход ткани: {round(res, 2)} метров'


# создаем подкласс Coat для расчета необходимой ткани для пальто по формуле V/6.5 + 0.5
class Coat(Clothes):
    @property
    def consumption(self):
        return self.param / 6.5 + 0.5

# создаем подкласс Suit для расчета необходимой ткани для костюма по формуле 2*H + 0.3
class Suit(Clothes):
    @property
    def consumption(self):
        return 2 * self.param + 0.3

# задаем параметры для каждого подкласса
coat_1 = Coat(42)
coat_2 = Coat(46)
suit_1 = Suit(178)

# общий расход выводим на экран
print(coat_1 + coat_2 + suit_1)
